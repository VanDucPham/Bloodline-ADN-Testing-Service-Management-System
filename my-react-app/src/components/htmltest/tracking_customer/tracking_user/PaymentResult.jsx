import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import apiService from "../../../../service/api"; // C·∫≠p nh·∫≠t ƒë√∫ng path c·ªßa b·∫°n

import "./PaymentResult.css"; // File CSS ri√™ng n·∫øu c√≥

function PaymentResult() {
  const location = useLocation();
  const navigate = useNavigate();

  const [status, setStatus] = useState("processing"); // 'processing' | 'success' | 'failed'
  const [message, setMessage] = useState("ƒêang x·ª≠ l√Ω k·∫øt qu·∫£ thanh to√°n...");

  useEffect(() => {
    const query = new URLSearchParams(location.search);
    const responseCode = query.get("vnp_ResponseCode");

    const createAppointment = async () => {
      if (responseCode === "00") {
        try {
          // L·∫•y d·ªØ li·ªáu t·ª´ localStorage
          const appointment = JSON.parse(localStorage.getItem("appointment"));
          const participants = JSON.parse(localStorage.getItem("participants"));
          const samples = JSON.parse(localStorage.getItem("sample"));
          const caseFile = JSON.parse(localStorage.getItem("caseFile"));
          const payment = JSON.parse(localStorage.getItem("payment"));

          // === Debug log ===
          console.log("=== DEBUG LOG ===");
          console.log("appointment:", appointment);
          console.log("participants:", participants);
          console.log("samples:", samples);
          console.log("caseFile:", caseFile);
          console.log("payment:", payment);

          // Ki·ªÉm tra d·ªØ li·ªáu b·∫Øt bu·ªôc
          if (!appointment || !participants || !samples || !caseFile || !payment) {
            console.error("‚ùå Thi·∫øu d·ªØ li·ªáu c·∫ßn thi·∫øt ƒë·ªÉ t·∫°o l·ªãch h·∫πn!");
            setStatus("failed");
            setMessage("‚ùå Thi·∫øu th√¥ng tin c·∫ßn thi·∫øt. Vui l√≤ng ƒë·∫∑t l·ªãch l·∫°i.");
            setTimeout(() => navigate("/booking"), 3000);
            return;
          }

          // T·∫°o payload
          const payload = { appointment, participants, samples, caseFile, payment };
          console.log("Payload g·ª≠i API:", payload);

          // G·ªçi API t·∫°o l·ªãch h·∫πn
          await apiService.user.create_app(payload);

          // N·∫øu th√†nh c√¥ng
          setStatus("success");
          setMessage("üéâ Thanh to√°n th√†nh c√¥ng v√† l·ªãch h·∫πn ƒë√£ ƒë∆∞·ª£c t·∫°o!");
          // Xo√° d·ªØ li·ªáu t·∫°m
          localStorage.removeItem("appointment");
          localStorage.removeItem("participants");
          localStorage.removeItem("sample");
          localStorage.removeItem("caseFile");
          localStorage.removeItem("payment");

          // ƒêi·ªÅu h∆∞·ªõng sau 3s
          setTimeout(() => navigate("/tracking_user"), 3000);
        } catch (err) {
          console.error("L·ªói khi g·ªçi API:", err);
          setStatus("failed");
          setMessage("‚ùå L·ªói khi t·∫°o l·ªãch h·∫πn. Vui l√≤ng th·ª≠ l·∫°i.");
          setTimeout(() => navigate("/booking"), 3000);
        }
      } else {
        setStatus("failed");
        setMessage("‚ùå Thanh to√°n th·∫•t b·∫°i ho·∫∑c b·ªã h·ªßy.");
        setTimeout(() => navigate("/booking"), 3000);
      }
    };

    createAppointment();
  }, [location, navigate]);

  return (
    <div className="payment-result-container">
      <div className={`payment-box ${status}`}>
        {status === "processing" && <div className="loader" />}
        <h2>K·∫øt qu·∫£ thanh to√°n</h2>
        <p>{message}</p>
        <p className="redirect-note">B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn trang trong gi√¢y l√°t...</p>
      </div>
    </div>
  );
}

export default PaymentResult;
