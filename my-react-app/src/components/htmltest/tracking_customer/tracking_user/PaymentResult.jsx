import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import apiService from "../../../../service/api";
import "./PaymentResult.css";

function PaymentResult() {
  const location = useLocation();
  const navigate = useNavigate();

  const [status, setStatus] = useState("processing");
  const [message, setMessage] = useState("ƒêang x·ª≠ l√Ω k·∫øt qu·∫£ thanh to√°n...");
  const [notice, setNotice] = useState(""); // Th√¥ng b√°o ƒë·ªông

  useEffect(() => {
    const query = new URLSearchParams(location.search);
    const responseCode = query.get("vnp_ResponseCode");

    const createAppointment = async () => {
      if (responseCode === "00") {
        try {
          const appointment = JSON.parse(localStorage.getItem("appointment"));
          const participants = JSON.parse(localStorage.getItem("participants"));
          const samples = JSON.parse(localStorage.getItem("sample"));
          const caseFile = JSON.parse(localStorage.getItem("caseFile"));
          const payment = JSON.parse(localStorage.getItem("payment"));

          if (!appointment || !participants || !samples || !caseFile || !payment) {
            setStatus("failed");
            setMessage("‚ùå Thi·∫øu th√¥ng tin c·∫ßn thi·∫øt. Vui l√≤ng ƒë·∫∑t l·ªãch l·∫°i.");
            setTimeout(() => navigate("/booking"), 3000);
            return;
          }

          // Thi·∫øt l·∫≠p th√¥ng b√°o theo h√¨nh th·ª©c l·∫•y m·∫´u
          let customNotice = "";
          switch (appointment.deliveryMethod) {
            case "HOME_COLLECTION":
              customNotice =
                "Kit s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn ƒë·ªãa ch·ªâ c·ªßa b·∫°n trong th·ªùi gian s·ªõm nh·∫•t. Vui l√≤ng ch√∫ √Ω ƒëi·ªán tho·∫°i ƒë·ªÉ nh·∫≠n th√¥ng b√°o giao h√†ng.";
              break;
            case "SELF_DROP_OFF":
              customNotice =
                "B·∫°n ƒë√£ ƒë·∫∑t th√†nh c√¥ng d·ªãch v·ª•. Vui l√≤ng mang ƒë·∫ßy ƒë·ªß gi·∫•y t·ªù v√† ng∆∞·ªùi th√¢n ƒë·∫øn c∆° s·ªü v√†o ƒë√∫ng gi·ªù h·∫πn. N·∫øu ƒë·∫øn tr·ªÖ, ch√∫ng t√¥i s·∫Ω kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ vi·ªác tr·ªÖ l·ªãch.";
              break;
            case "HOME_DELIVERY":
              customNotice =
                "Nh√¢n vi√™n c·ªßa ch√∫ng t√¥i s·∫Ω ƒë·∫øn ƒë·ªãa ch·ªâ c·ªßa b·∫°n ƒë·ªÉ l·∫•y m·∫´u trong th·ªùi gian s·ªõm nh·∫•t. Vui l√≤ng ch√∫ √Ω ƒëi·ªán tho·∫°i ƒë·ªÉ nh·∫≠n th√¥ng b√°o l·ªãch h·∫πn.";
              break;
            default:
              customNotice = "C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t d·ªãch v·ª• c·ªßa ch√∫ng t√¥i.";
          }
          setNotice(customNotice);

          // G·ªçi API t·∫°o l·ªãch h·∫πn
          const payload = { appointment, participants, samples, caseFile, payment };
          await apiService.user.create_app(payload);

          setStatus("success");
          setMessage("üéâ Thanh to√°n th√†nh c√¥ng v√† l·ªãch h·∫πn ƒë√£ ƒë∆∞·ª£c t·∫°o!");
          localStorage.removeItem("appointment");
          localStorage.removeItem("participants");
          localStorage.removeItem("sample");
          localStorage.removeItem("caseFile");
          localStorage.removeItem("payment");

          // Ch·ªù ng∆∞·ªùi d√πng ƒë·ªçc th√¥ng b√°o r·ªìi t·ª± ƒëi·ªÅu h∆∞·ªõng
          setTimeout(() => navigate("/CustomerApointmentList"), 8000);
        } catch (err) {
          console.error("L·ªói khi g·ªçi API:", err);
          setStatus("failed");
          setMessage("‚ùå L·ªói khi t·∫°o l·ªãch h·∫πn. Vui l√≤ng th·ª≠ l·∫°i.");
          setTimeout(() => navigate("/booking"), 3000);
        }
      } else {
        setStatus("failed");
        setMessage("‚ùå Thanh to√°n th·∫•t b·∫°i ho·∫∑c b·ªã h·ªßy.");
        setTimeout(() => navigate("/booking"), 3000);
      }
    };

    createAppointment();
  }, [location, navigate]);

  return (
    <div className="payment-result-container">
      <div className={`payment-box ${status}`}>
        {status === "processing" && <div className="loader" />}
        <h2>K·∫øt qu·∫£ thanh to√°n</h2>
        <p>{message}</p>
        {status === "success" && notice && (
          <div className="notice-box">
            <h3>Th√¥ng b√°o quan tr·ªçng</h3>
            <p>{notice}</p>
          </div>
        )}
        {status !== "processing" && (
          <p className="redirect-note">
            B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn sang trang qu·∫£n l√Ω l·ªãch h·∫πn trong gi√¢y l√°t...
          </p>
        )}
      </div>
    </div>
  );
}

export default PaymentResult;
