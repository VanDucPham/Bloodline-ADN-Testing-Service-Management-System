import React, { useEffect, useState } from 'react';
import './AdminDashboard.css';
import apiService from "../../service/api";
 // ƒê∆∞·ªùng d·∫´n n√†y s·∫Ω ho·∫°t ƒë·ªông ƒë√∫ng





export default function AdminDashboard() {

    const [account, setAccount] = useState([]);
    const [loading, setLoading] = useState(true);
    const [status, setStatus] = useState('');

    useEffect(() => {
        const fetchAccounts = async () => {
            setStatus('ƒêang t·∫£i d·ªØ li·ªáu ......');
            try {
                const response = await apiService.admin.getAllUser(); 
                setAccount(response);
                console.log(response)
                setStatus('');
                if(response==0){
                  setStatus("Kh√¥ng c√≥ user n√†o ƒë∆∞·ª£c t·∫°o")
                }
            } catch (error) {
                console.log(error, "L·ªói d·ªØ li·ªáu t·∫£i l√™n acc");
                setStatus('L·ªói khi t·∫£i d·ªØ li·ªáu ng∆∞·ªùi d√πng');
            } finally {
                setLoading(false);
            }
        };

        fetchAccounts();
    }, []); // Ch·ªâ g·ªçi 1 l·∫ßn khi load page

    const getRoleClass = (role) => {
        switch (role) {
            case 'Qu·∫£n tr·ªã vi√™n': return 'role admin';
            case 'Qu·∫£n l√Ω': return 'role manager';
            case 'Nh√¢n vi√™n': return 'role staff';
            default: return 'role user';
        }
    };
    const handleDelete = async (id) => {
        if (window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y?')) {
            try {
                await apiService.admin.deleteUser(id);
                setAccount(account.filter(u => u.user_id !== id));
                alert('ƒê√£ x√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng');
            } catch (error) {
                console.error('L·ªói khi x√≥a ng∆∞·ªùi d√πng:', error);
                setStatus('L·ªói khi x√≥a ng∆∞·ªùi d√πng');
            }
        }
    }

    return (
        <div className="container">
            <aside className="sidebar">
                <h2>Admin</h2>
                <a className="back" href="/">Quay v·ªÅ</a>
                <ul>
                    <li>üè† Trang ch·ªß</li>
                    <li className="active">üë§ Qu·∫£n l√Ω ng∆∞·ªùi d√πng</li>
                    <li>üîê Ph√¢n quy·ªÅn</li>
                    <li>üõ†Ô∏è Qu·∫£n l√Ω d·ªãch v·ª•</li>
                    <li>üìä Th·ªëng k√™ t·ªïng quan</li>
                    <li>‚öôÔ∏è Qu·∫£n tr·ªã h·ªá th·ªëng</li>
                </ul>
            </aside>

            <main className="main-content">
                <div className="topbar">
                    <div className="title">Qu·∫£n l√Ω ng∆∞·ªùi d√πng</div>
                    <button className="add-btn">+ Th√™m ng∆∞·ªùi d√πng</button>
                </div>

                <div className="filters">
                    <input type="text" placeholder="T√¨m ki·∫øm ng∆∞·ªùi d√πng..." />
                    <select>
                        <option>T·∫•t c·∫£ vai tr√≤</option>
                        <option>Ng∆∞·ªùi d√πng</option>
                        <option>Nh√¢n vi√™n</option>
                        <option>Qu·∫£n l√Ω</option>
                        <option>Qu·∫£n tr·ªã vi√™n</option>
                    </select>
                    <button>üìÇ L·ªçc</button>
                </div>

                {status && (
                    <div className="status-message">{status}</div>
                )}

                {!loading && !status && (
                    <table className="user-table">
                        <thead>
                            <tr>
                                <th>Ng∆∞·ªùi d√πng</th>
                                <th>Vai tr√≤</th>
                                <th>Tr·∫°ng th√°i</th>
                                
                                <th>H√†nh ƒë·ªông</th>
                            </tr>
                        </thead>
                        <tbody>
                            {account.map((u, index) => (
                                <tr key={index}>
                                    <td>
                                        <div className="avatar">{u.name ? u.name[0] : '?'}</div>

                                        <div>
                                            <div>{u.name}</div>
                                            <div className="email">{u.email}</div>
                                        </div>
                                    </td>
                                    <td><span className={getRoleClass(u.role)}>{u.role}</span></td>
                                    <td><span className="status active">{u.status}</span></td>
                                    
                                    <td>
                                        <button className="action edit">‚úèÔ∏è</button>
                                        <button className="action delete" onClick={() => handleDelete(u.user_id)}>üóëÔ∏è</button>
                                    </td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                )}
            </main>
        </div>
    );
}
